**************************
Setup a development system
**************************
To set up a development environment DATAGERRY does not need any special tools.
Only the generation of a productive binary is generated by additional software (more about this later).
However, it is recommended to set up third-party programs for data storage and
process management independently of the development environment.

.. contents:: Table of Contents
    :local:


Install Python
==============
The backend of DATAGERRY is currently using Python 3.9.x. This is also the only dependency which is absolutely
necessary to start the program. Older versions than Python 3.9 may run,
but are not supported. The installation of Python 3 is different depending on the operating system.
Please see at the official documentation for details: `Download Python | Python.org <https://www.python.org/downloads/>`_

.. note::
    Currently Python 3.9.x is used for development, which is not compatible with Python 2.x.

| 

=======================================================================================================================

| 

Clone repository
================
Clone the git repository from our official mirror:

.. code:: bash

    git clone https://github.com/DATAGerry/DATAGerry


Install requirements
--------------------
We recommend generating an isolated python environment like ``Virtualenv``
To install the python requirements run:

.. code:: bash

    pip install -r requirements.txt

| 

=======================================================================================================================

| 

Setting up third party dependencies
===================================
Here is an overview of of third party dependencies.


MongoDB
-------
MongoDB is a document-oriented NoSQL database. It is used to store content and the program uses necessary data.
See the official installation guide for details: `Install MongoDB Community Edition <https://docs.mongodb.com/manual/administration/install-community/>`_


RabbitMQ
--------
RabbitMQ is an open source message broker software that implements the Advanced Message Queuing Protocol (AMQP).
See the official installation guide for details: `Downloading and Installing RabbitMQ <https://www.rabbitmq.com/download.html#installation-guides>`_

| 

=======================================================================================================================

| 

Modify configuration file
=========================
The default configuration file can be fund at ``etc/cmdb.conf`` inside the DATAGERRY repository.
The default configuration should look like this:

.. include:: ../../../etc/cmdb.conf
    :literal:


Database config
---------------
Configuration section for the MongoDB database.

.. csv-table:: Database config section table
    :file: fixtures/database_config.csv
    :header-rows: 1
    :stub-columns: 1
    :align: left


Webserver config
----------------
Configuration section for the web(rest)-server.

.. csv-table:: Webserver config section table
    :file: fixtures/webserver_config.csv
    :header-rows: 1
    :stub-columns: 1
    :align: left


Message queueing config
-----------------------
Configuration section for the message queueing server.

.. csv-table:: Message queueing config section table
    :file: fixtures/message_queueing_config.csv
    :header-rows: 1
    :stub-columns: 1
    :align: left

| 

=======================================================================================================================

| 

Starting the backend and frontend
=================================
For a development environment, the frontend must be started independently of the backend,
since these systems are only connected during the compile process.
If only the development of the backend is desired, the frontend can be ignored.
This will then display only one placeholder page.


Starting Python backend
-----------------------
To start DATAGERRY you can use the following command.

.. code-block:: bash

    ./datagerry -s -d

Alternatively the backend can be started from the ROOT folder of the DATAGERRY repository with the following command

.. code-block:: bash

    python3 -m cmdb -s -d

.. note::
    For development it is recommended to start the system in debug mode by using the ``-d`` flag.

| 

=======================================================================================================================

| 

Starting Angular frontend
-------------------------
This frontend is developed with Angular Version 17.

Installation
^^^^^^^^^^^^
Run ``npm install`` inside the ``app`` folder to install all dependencies.
Angular requires node version 18 and npm version 10.

Development server
^^^^^^^^^^^^^^^^^^
Run ``ng serve`` inside the ``app`` folder to start the frontend. Navigate to ``http://localhost:4200/``.
The app will automatically reload if you change any of the frontend source files.

Build
^^^^^
Run ``ng build`` to build the project. The build artifacts will be stored in the ``dist/`` directory.
Use the ``--prod`` flag for a production build.
